{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\OneDrive\\\\Documents\\\\completed-apps\\\\tree-of-life-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [animals, setAnimals] = useState([]);\n  useEffect(() => {\n    fetch('https://api.allorigins.win/get?url=https://api.gbif.org/v1/species?limit=100').then(response => response.json()).then(response => JSON.parse(response.contents)).then(response => setAnimals(response.results)).catch(err => console.error(err));\n  }, []); //kingdom,phylum,class,order,family,genus,species\n\n  useEffect(() => {\n    let taxonomy = {};\n\n    for (let animal of animals) {\n      console.log(animal);\n\n      if (animal.kingdom) {\n        console.log(\"kingdom\", animal.kingdom);\n\n        if (!Object.keys(taxonomy).includes(animal.kingdom)) {\n          taxonomy[`${animal.kingdom}`] = {};\n        }\n      }\n\n      if (animal.phylum) {\n        console.log(\"phylum\", animal.phylum);\n\n        if (!Object.keys(taxonomy[`${animal.kingdom}`]).includes(animal.phylum)) {\n          taxonomy[`${animal.kingdom}`][`${animal.phylum}`] = {};\n        }\n      } // if(animal.class){\n      //   console.log(\"class\",animal.class)\n      //   if(!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`]).includes(animal.class)){\n      //     taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.phylum}`]={}\n      //   }\n      // }\n\n    }\n\n    console.log(taxonomy);\n  }, [animals]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tMDm78NK8kLY0yURoGtNyZ1g+9k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","App","animals","setAnimals","fetch","then","response","json","JSON","parse","contents","results","catch","err","console","error","taxonomy","animal","log","kingdom","Object","keys","includes","phylum"],"sources":["C:/Users/Julia/OneDrive/Documents/completed-apps/tree-of-life-main/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react'\n\nfunction App() {\n  const [animals,setAnimals] = useState([]);\n\nuseEffect(()=>{\nfetch('https://api.allorigins.win/get?url=https://api.gbif.org/v1/species?limit=100')\n  .then(response => response.json())\n  .then(response =>JSON.parse(response.contents))\n  .then(response =>setAnimals(response.results))\n  .catch(err => console.error(err));\n},[])\n//kingdom,phylum,class,order,family,genus,species\nuseEffect(()=>{\n  let taxonomy={}\n  for (let animal of animals){\n    console.log(animal)\n    if(animal.kingdom){\n      console.log(\"kingdom\",animal.kingdom)\n      if(!Object.keys(taxonomy).includes(animal.kingdom)){\n        taxonomy[`${animal.kingdom}`]={}\n      }\n    }\n    if(animal.phylum){\n      console.log(\"phylum\",animal.phylum)\n      if(!Object.keys(taxonomy[`${animal.kingdom}`]).includes(animal.phylum)){\n        taxonomy[`${animal.kingdom}`][`${animal.phylum}`]={}\n      }\n    }\n    // if(animal.class){\n    //   console.log(\"class\",animal.class)\n    //   if(!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`]).includes(animal.class)){\n    //     taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.phylum}`]={}\n    //   }\n    // }\n  }\n  console.log(taxonomy)\n},[animals])\n\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,EAAD,CAArC;EAEFC,SAAS,CAAC,MAAI;IACdI,KAAK,CAAC,8EAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQC,QAAQ,IAAGE,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,QAApB,CAFnB,EAGGL,IAHH,CAGQC,QAAQ,IAAGH,UAAU,CAACG,QAAQ,CAACK,OAAV,CAH7B,EAIGC,KAJH,CAISC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAJhB;EAKC,CANQ,EAMP,EANO,CAAT,CAHe,CAUf;;EACAb,SAAS,CAAC,MAAI;IACZ,IAAIgB,QAAQ,GAAC,EAAb;;IACA,KAAK,IAAIC,MAAT,IAAmBf,OAAnB,EAA2B;MACzBY,OAAO,CAACI,GAAR,CAAYD,MAAZ;;MACA,IAAGA,MAAM,CAACE,OAAV,EAAkB;QAChBL,OAAO,CAACI,GAAR,CAAY,SAAZ,EAAsBD,MAAM,CAACE,OAA7B;;QACA,IAAG,CAACC,MAAM,CAACC,IAAP,CAAYL,QAAZ,EAAsBM,QAAtB,CAA+BL,MAAM,CAACE,OAAtC,CAAJ,EAAmD;UACjDH,QAAQ,CAAE,GAAEC,MAAM,CAACE,OAAQ,EAAnB,CAAR,GAA8B,EAA9B;QACD;MACF;;MACD,IAAGF,MAAM,CAACM,MAAV,EAAiB;QACfT,OAAO,CAACI,GAAR,CAAY,QAAZ,EAAqBD,MAAM,CAACM,MAA5B;;QACA,IAAG,CAACH,MAAM,CAACC,IAAP,CAAYL,QAAQ,CAAE,GAAEC,MAAM,CAACE,OAAQ,EAAnB,CAApB,EAA2CG,QAA3C,CAAoDL,MAAM,CAACM,MAA3D,CAAJ,EAAuE;UACrEP,QAAQ,CAAE,GAAEC,MAAM,CAACE,OAAQ,EAAnB,CAAR,CAA+B,GAAEF,MAAM,CAACM,MAAO,EAA/C,IAAkD,EAAlD;QACD;MACF,CAbwB,CAczB;MACA;MACA;MACA;MACA;MACA;;IACD;;IACDT,OAAO,CAACI,GAAR,CAAYF,QAAZ;EACD,CAxBQ,EAwBP,CAACd,OAAD,CAxBO,CAAT;EA0BE,oBACE;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA1CQD,G;;KAAAA,G;AA4CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}