{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\OneDrive\\\\Documents\\\\completed-apps\\\\tree-of-life-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [animals, setAnimals] = useState([]);\n  useEffect(() => {\n    fetch('https://api.gbif.org/v1/species?limit:1000').then(response => response.json()).then(response => JSON.parse(response.contents)).then(response => setAnimals(response.results)).catch(err => console.error(err));\n  }, []);\n\n  async function narrowOptions() {\n    let highertaxonkey = await fetch(`https://api.allorigins.win/get?url=https://api.gbif.org/v1/species/match?name=${term}`).then(response => response.json()).then(response => {\n      return response.usageKey;\n    }).catch(err => console.error(err));\n    await fetch(`https://api.allorigins.win/get?url=https://api.gbif.org/v1/species/search?rank=SPECIES&highertaxon_key=${highertaxonkey}`).then(response => response.json()).then(response => JSON.parse(response.contents)).then(response => setAnimals(response.results)).catch(err => console.error(err));\n  } //kingdom,phylum,class,order,family,genus,species\n\n\n  useEffect(() => {\n    let taxonomy = {};\n\n    for (let animal of animals) {\n      console.log(animal);\n      console.log(\"kingdom\", animal.kingdom);\n\n      if (animal.kingdom) {\n        if (!Object.keys(taxonomy).includes(animal.kingdom)) {\n          taxonomy[`${animal.kingdom}`] = {};\n        }\n      }\n\n      if (animal.kingdom && animal.phylum) {\n        console.log(\"phylum\", animal.phylum);\n\n        if (taxonomy[`${animal.kingdom}`]) {\n          if (!Object.keys(taxonomy[`${animal.kingdom}`]).includes(animal.phylum)) {\n            taxonomy[`${animal.kingdom}`][`${animal.phylum}`] = {};\n            console.log(taxonomy[`${animal.kingdom}`][`${animal.phylum}`]);\n          }\n        }\n      }\n\n      if (animal.kingdom && animal.phylum & animal.class) {\n        console.log(\"class\", animal.class);\n\n        if (taxonomy[`${animal.kingdom}`][`${animal.phylum}`]) {\n          if (!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`]).includes(animal.class)) {\n            taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`] = {};\n            console.log(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`]);\n          }\n        }\n      }\n\n      if (animal.kingdom && animal.phylum && animal.class && animal.order) {\n        console.log(\"order\", animal.order);\n\n        if (taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`]) {\n          if (!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`]).includes(animal.order)) {\n            taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`] = {};\n            console.log(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`]);\n          }\n        }\n      }\n\n      if (animal.kingdom && animal.phylum && animal.class && animal.order && animal.family) {\n        console.log(\"family\", animal.family);\n\n        if (taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`]) {\n          if (!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`]).includes(animal.family)) {\n            taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`] = {};\n          }\n        }\n      }\n\n      if (animal.kingdom && animal.phylum && animal.class && animal.order && animal.family && animal.genus) {\n        console.log(\"genus\", animal.genus);\n\n        if (taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`]) {\n          if (!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`]).includes(animal.genus)) {\n            taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`][`${animal.genus}`] = {};\n          }\n        }\n      }\n\n      if (animal.kingdom && animal.phylum && animal.class && animal.order && animal.family && animal.genus && animal.species) {\n        console.log(\"species\", animal.species);\n\n        if (taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`][`${animal.genus}`]) {\n          if (!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`][`${animal.genus}`]).includes(animal.species)) {\n            taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`][`${animal.genus}`][`${animal.species}`] = {};\n          }\n        }\n      }\n    }\n\n    console.log(taxonomy, animals);\n  }, [animals]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tMDm78NK8kLY0yURoGtNyZ1g+9k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","App","animals","setAnimals","fetch","then","response","json","JSON","parse","contents","results","catch","err","console","error","narrowOptions","highertaxonkey","term","usageKey","taxonomy","animal","log","kingdom","Object","keys","includes","phylum","class","order","family","genus","species"],"sources":["C:/Users/Julia/OneDrive/Documents/completed-apps/tree-of-life-main/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react'\n\nfunction App() {\n  const [animals,setAnimals] = useState([]);\n\nuseEffect(()=>{\nfetch('https://api.gbif.org/v1/species?limit:1000')\n  .then(response => response.json())\n  .then(response =>JSON.parse(response.contents))\n  .then(response =>setAnimals(response.results))\n  .catch(err => console.error(err));\n},[])\n\nasync function narrowOptions(){\n  let highertaxonkey=await fetch(`https://api.allorigins.win/get?url=https://api.gbif.org/v1/species/match?name=${term}`)\n    .then(response => response.json())\n    .then(response =>{return response.usageKey})\n    .catch(err => console.error(err));\n    await fetch(`https://api.allorigins.win/get?url=https://api.gbif.org/v1/species/search?rank=SPECIES&highertaxon_key=${highertaxonkey}`  )\n      .then(response => response.json())\n      .then(response =>JSON.parse(response.contents))\n      .then(response =>setAnimals(response.results))\n      .catch(err => console.error(err));\n\n}\n\n\n\n//kingdom,phylum,class,order,family,genus,species\nuseEffect(()=>{\n  let taxonomy={}\n  for (let animal of animals){\n\n    console.log(animal)\n      console.log(\"kingdom\",animal.kingdom)\n      if(animal.kingdom){\n        if(!Object.keys(taxonomy).includes(animal.kingdom)){\n          taxonomy[`${animal.kingdom}`]={}\n        }\n      }\n\n      if (animal.kingdom&&animal.phylum){\n        console.log(\"phylum\",animal.phylum)\n          if(taxonomy[`${animal.kingdom}`]){\n            if(!Object.keys(taxonomy[`${animal.kingdom}`]).includes(animal.phylum)){\n              taxonomy[`${animal.kingdom}`][`${animal.phylum}`]={}\n              console.log(taxonomy[`${animal.kingdom}`][`${animal.phylum}`])\n            }\n          }\n        }\n\n\n      if(animal.kingdom&&animal.phylum&animal.class){\n        console.log(\"class\",animal.class)\n          if(taxonomy[`${animal.kingdom}`][`${animal.phylum}`]){\n            if(!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`]).includes(animal.class)){\n              taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`]={}\n              console.log(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`])\n            }\n          }\n        }\n\n\n      if(animal.kingdom&&animal.phylum&&animal.class&&animal.order){\n        console.log(\"order\",animal.order)\n        if(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`]){\n          if(!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`]).includes(animal.order)){\n            taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`]={}\n            console.log(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`])\n          }\n        }\n      }\n\n\n      if(animal.kingdom&&animal.phylum&&animal.class&&animal.order&&animal.family){\n      console.log(\"family\",animal.family)\n      if(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`]){\n        if(!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`]).includes(animal.family)){\n          taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`]={}\n        }\n      }\n    }\n\n      if(animal.kingdom&&animal.phylum&&animal.class&&animal.order&&animal.family&&animal.genus){\n      console.log(\"genus\",animal.genus)\n      if(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`]){\n        if(!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`]).includes(animal.genus)){\n          taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`][`${animal.genus}`]={}\n        }\n      }\n    }\n    if(animal.kingdom&&animal.phylum&&animal.class&&animal.order&&animal.family&&animal.genus&&animal.species){\n      console.log(\"species\",animal.species)\n      if(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`][`${animal.genus}`]){\n        if(!Object.keys(taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`][`${animal.genus}`]).includes(animal.species)){\n          taxonomy[`${animal.kingdom}`][`${animal.phylum}`][`${animal.class}`][`${animal.order}`][`${animal.family}`][`${animal.genus}`][`${animal.species}`]={}\n        }\n      }\n    }\n\n  }\n  console.log(taxonomy,animals)\n},[animals])\n\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}