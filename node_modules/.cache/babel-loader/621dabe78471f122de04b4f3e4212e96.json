{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\OneDrive\\\\Documents\\\\completed-apps\\\\tree-of-life-main\\\\src\\\\Tree.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport P5Wrapper from \"react-p5-wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tree(props) {\n  const sketch = p5 => {\n    let theta, input, button;\n    let numberofgroups = 0;\n\n    p5.setup = () => {\n      p5.createCanvas(1000, 1000);\n      p5.background(p5.color(255, 255, 255));\n      p5.stroke(255);\n      p5.strokeWeight(30); // Let's pick an angle 0 to 90 degrees based on the mouse position\n\n      let a = 15; // Convert it to radians\n\n      theta = p5.radians(a); // Start the tree from the bottom of the screen\n\n      p5.translate(p5.width / 2, p5.height); // Draw a line 120 pixels\n\n      p5.stroke(101, 67, 33);\n      p5.line(0, 0, 0, -200);\n\n      (async function () {\n        var {\n          groups,\n          count\n        } = await fetch('/groups/findlocalgrouplevels/localgroup').then(res => {\n          return res.json();\n        }).then(blob => {\n          var groups = {};\n\n          for (var group of blob.data) {\n            if (groups.hasOwnProperty(`${group.level}`)) {\n              groups[`${group.level}`].push(group);\n            } else {\n              groups[`${group.level}`] = [group];\n            }\n          }\n\n          var count = -1;\n\n          for (var g in groups) {\n            count++;\n\n            for (var gr of groups[`${g}`]) {\n              numberofgroups++;\n            }\n          }\n\n          return {\n            groups,\n            count\n          };\n        });\n        var group = await getGroup(groups[`${count}`][0][\"_id\"], count);\n        p5.push();\n        p5.rotate(-1.5708);\n        p5.textSize(23);\n        p5.strokeWeight(2);\n        p5.stroke(0);\n        p5.fill(255);\n        console.log(group);\n        p5.text(group.groupy.location, 10, 5);\n        p5.pop();\n        p5.translate(0, -200);\n        branch(200, 25, 0, 10, group.groupy.groupsbelow.length, group.groupy.groupsbelow, group.countminusone, 0);\n      })();\n    };\n\n    async function getGroup(id, count) {\n      var countminusone = count - 1;\n      var groupy = [];\n\n      if (count > -1) {\n        groupy = await fetch('/groups/findlocalgroupnameidchildren/' + id).then(res => {\n          return res.json();\n        }).then(blob => {\n          return blob.data;\n        });\n      }\n\n      groupy = groupy[0];\n      return {\n        groupy,\n        countminusone\n      };\n    }\n\n    async function branch(h, t, d, l, b, g, c, r) {\n      numberofgroups--;\n      console.log(numberofgroups);\n\n      if (numberofgroups == 1) {\n        props.finishLoading();\n      }\n\n      d += 1;\n      t -= 6;\n      h *= 0.66;\n      let height = h / 0.66;\n\n      if (h > 20) {\n        if (d > 1 && d >= 2) {\n          p5.stroke(74, 67, 0);\n        }\n\n        if (d > 2) {\n          let rand = Math.random();\n          let randtwo = Math.random();\n\n          if (randtwo < 1) {\n            p5.fill(34, 139, 34);\n            p5.stroke(34, 139, 34);\n          }\n\n          if (randtwo < 0.66) {\n            p5.fill(0, 128, 0);\n            p5.stroke(0, 128, 0);\n          }\n\n          if (randtwo < 0.33) {\n            p5.fill(0, 100, 0);\n            p5.stroke(0, 100, 0);\n          }\n\n          if (rand < 0.5) {\n            p5.ellipse(l + t, h / 3, l, l / 8);\n            p5.ellipse(-(l + t), h / 1.5, l, l / 8);\n            p5.ellipse(-(l + t), 0, l, l / 8);\n          } else {\n            p5.ellipse(-(l + t), h / 3, l, l / 8);\n            p5.ellipse(l + t, h / 1.5, l, l / 8);\n            p5.ellipse(l + t, 0, l, l / 8);\n          }\n\n          console.log(\"count\", c);\n\n          if (c == -1) {\n            p5.ellipse(0, -15, 1 / 8, 8);\n          }\n\n          l *= 0.66;\n        }\n      }\n\n      if (h > 10) {\n        if (b == 2) {\n          p5.push(); // Save the current state of transformation (i.e. where are we now)\n\n          p5.rotate(theta); // Rotate by theta\n\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h); // Draw the branch\n\n          p5.translate(0, -h); // Move to the end of the branch\n\n          getGroup(g[0], c, h, t, d, l);\n          p5.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n          // Repeat the same thing, only branch off to the \"left\" this time!\n\n          p5.push();\n          p5.rotate(-theta);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.translate(0, -h);\n          getGroup(g[1], c, h, t, d, l);\n          p5.pop();\n        }\n\n        if (b == 3) {\n          p5.push(); // Save the current state of transformation (i.e. where are we now)\n\n          p5.rotate(theta * 2); // Rotate by theta\n\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h); // Draw the branch\n\n          p5.translate(0, -h); // Move to the end of the branch\n\n          getGroup(g[0], c, h, t, d, l);\n          p5.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n\n          p5.push(); // Save the current state of transformation (i.e. where are we now)\n\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h); // Draw the branch\n\n          p5.translate(0, -h); // Move to the end of the branch\n\n          getGroup(g[1], c, h, t, d, l);\n          p5.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n          // Repeat the same thing, only branch off to the \"left\" this time!\n\n          p5.push();\n          p5.rotate(-theta * 2);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.translate(0, -h);\n          getGroup(g[2], c, h, t, d, l);\n          p5.pop();\n        }\n\n        if (b == 4) {\n          let accumulatedrotation = r - theta;\n          p5.push();\n          p5.rotate(theta);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.push();\n\n          if (accumulatedrotation > 0) {\n            p5.translate(0, -h);\n            p5.rotate(1.5708);\n          } else {\n            p5.rotate(-1.5708);\n          }\n\n          p5.textSize(t);\n          p5.strokeWeight(2);\n          p5.stroke(0);\n          p5.fill(255);\n          let group = await getGroup(g[0], c);\n          p5.text(group.groupy.location, 10, 5);\n          p5.pop();\n          p5.translate(0, -h);\n          await branch(h, t, d, l, group.groupy.groupsbelow.length, group.groupy.groupsbelow, group.countminusone, accumulatedrotation);\n          p5.pop();\n          accumulatedrotation = r + theta;\n          p5.push();\n          p5.rotate(-theta);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.push();\n\n          if (accumulatedrotation > 0) {\n            p5.translate(0, -h);\n            p5.rotate(1.5708);\n          } else {\n            p5.rotate(-1.5708);\n          }\n\n          p5.textSize(t);\n          p5.strokeWeight(2);\n          p5.stroke(0);\n          p5.fill(255);\n          group = await getGroup(g[1], c);\n          let texttwo = p5.text(group.groupy.location, 10, 5);\n          p5.pop();\n          p5.translate(0, -h);\n          console.log(group);\n          await branch(h, t, d, l, group.groupy.groupsbelow.length, group.groupy.groupsbelow, group.countminusone, accumulatedrotation);\n          p5.pop();\n          accumulatedrotation = r - theta * 3;\n          p5.push();\n          p5.rotate(theta * 3);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.push();\n\n          if (accumulatedrotation > 0) {\n            p5.translate(0, -h);\n            p5.rotate(1.5708);\n          } else {\n            p5.rotate(-1.5708);\n          }\n\n          p5.textSize(t);\n          p5.strokeWeight(2);\n          p5.stroke(0);\n          p5.fill(255);\n          group = await getGroup(g[2], c);\n          console.log(group);\n          let textthree = p5.text(group.groupy.location, 10, 5);\n          p5.pop();\n          p5.translate(0, -h);\n          await branch(h, t, d, l, group.groupy.groupsbelow.length, group.groupy.groupsbelow, group.countminusone, accumulatedrotation);\n          p5.pop();\n          accumulatedrotation = r + theta * 3;\n          p5.push();\n          p5.rotate(-theta * 3);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.push();\n\n          if (accumulatedrotation > 0) {\n            p5.translate(0, -h);\n            p5.rotate(1.5708);\n          } else {\n            p5.rotate(-1.5708);\n          }\n\n          p5.textSize(t);\n          p5.strokeWeight(2);\n          p5.stroke(0);\n          p5.fill(255);\n          group = await getGroup(g[3], c);\n          console.log(group);\n          let textfour = p5.text(group.groupy.location, 10, 5);\n          p5.pop();\n          p5.translate(0, -h);\n          await branch(h, t, d, l, group.groupy.groupsbelow.length, group.groupy.groupsbelow, group.countminusone, accumulatedrotation);\n          p5.pop();\n        }\n\n        if (b == 5) {\n          let accumulatedrotation = r;\n          p5.push();\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.push();\n\n          if (accumulatedrotation > 0) {\n            p5.translate(0, -h);\n            p5.rotate(1.5708);\n          } else {\n            p5.rotate(-1.5708);\n          }\n\n          p5.textSize(t);\n          p5.strokeWeight(2);\n          p5.stroke(0);\n          p5.fill(255);\n          let group = await getGroup(g[0], c);\n          p5.text(group.groupy.location, 10, 5);\n          p5.pop();\n          p5.translate(0, -h);\n          await branch(h, t, d, l, group.groupy.groupsbelow.length, group.groupy.groupsbelow, group.countminusone, accumulatedrotation);\n          p5.pop();\n          accumulatedrotation = r - theta * 2;\n          p5.push();\n          p5.rotate(theta * 2);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.push();\n\n          if (accumulatedrotation > 0) {\n            p5.translate(0, -h);\n            p5.rotate(1.5708);\n          } else {\n            p5.rotate(-1.5708);\n          }\n\n          p5.textSize(t);\n          p5.strokeWeight(2);\n          p5.stroke(0);\n          p5.fill(255);\n          group = await getGroup(g[1], c);\n          p5.text(group.groupy.location, 10, 5);\n          p5.pop();\n          p5.translate(0, -h);\n          await branch(h, t, d, l, group.groupy.groupsbelow.length, group.groupy.groupsbelow, group.countminusone, accumulatedrotation);\n          p5.pop();\n          accumulatedrotation = r + theta * 2;\n          p5.push();\n          p5.rotate(-theta * 2);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.push();\n\n          if (accumulatedrotation > 0) {\n            p5.translate(0, -h);\n            p5.rotate(1.5708);\n          } else {\n            p5.rotate(-1.5708);\n          }\n\n          p5.textSize(t);\n          p5.strokeWeight(2);\n          p5.stroke(0);\n          p5.fill(255);\n          group = await getGroup(g[2], c);\n          p5.text(group.groupy.location, 10, 5);\n          p5.pop();\n          p5.translate(0, -h);\n          await branch(h, t, d, l, group.groupy.groupsbelow.length, group.groupy.groupsbelow, group.countminusone, accumulatedrotation);\n          p5.pop();\n          accumulatedrotation = r - theta * 4;\n          p5.push();\n          p5.rotate(theta * 4);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.push();\n\n          if (accumulatedrotation > 0) {\n            p5.translate(0, -h);\n            p5.rotate(1.5708);\n          } else {\n            p5.rotate(-1.5708);\n          }\n\n          p5.textSize(t);\n          p5.strokeWeight(2);\n          p5.stroke(0);\n          p5.fill(255);\n          group = await getGroup(g[3], c);\n          p5.text(group.groupy.location, 10, 5);\n          p5.pop();\n          p5.translate(0, -h);\n          await branch(h, t, d, l, group.groupy.groupsbelow.length, group.groupy.groupsbelow, group.countminusone, accumulatedrotation);\n          p5.pop();\n          accumulatedrotation = r + theta * 4;\n          p5.push();\n          p5.rotate(-theta * 4);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.push();\n\n          if (accumulatedrotation > 0) {\n            p5.translate(0, -h);\n            p5.rotate(1.5708);\n          } else {\n            p5.rotate(-1.5708);\n          }\n\n          p5.textSize(t);\n          p5.strokeWeight(2);\n          p5.stroke(0);\n          p5.fill(255);\n          group = await getGroup(g[4], c);\n          p5.text(group.groupy.location, 10, 5);\n          p5.pop();\n          p5.translate(0, -h);\n          await branch(h, t, d, l, group.groupy.groupsbelow.length, group.groupy.groupsbelow, group.countminusone, accumulatedrotation);\n          p5.pop();\n        }\n\n        if (b == 6) {\n          p5.push();\n          p5.rotate(theta);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h); // Draw the branch\n\n          p5.translate(0, -h); // Move to the end of the branch\n\n          getGroup(g[0], c, h, t, d, l);\n          p5.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n\n          p5.push();\n          p5.rotate(-theta);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.translate(0, -h);\n          getGroup(g[1], c, h, t, d, l);\n          p5.pop();\n          p5.push(); // Save the current state of transformation (i.e. where are we now)\n\n          p5.rotate(theta * 3); // Rotate by theta\n\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h); // Draw the branch\n\n          p5.translate(0, -h); // Move to the end of the branch\n\n          getGroup(g[2], c, h, t, d, l);\n          p5.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n\n          p5.push();\n          p5.rotate(-theta * 3);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.translate(0, -h);\n          getGroup(g[3], c, h, t, d, l);\n          p5.pop();\n          p5.push(); // Save the current state of transformation (i.e. where are we now)\n\n          p5.rotate(theta * 5); // Rotate by theta\n\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h); // Draw the branch\n\n          p5.translate(0, -h); // Move to the end of the branch\n\n          getGroup(g[4], c, h, t, d, l);\n          p5.pop();\n          p5.push(); // Save the current state of transformation (i.e. where are we now)\n\n          p5.rotate(-theta * 5); // Rotate by theta\n\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h); // Draw the branch\n\n          p5.translate(0, -h); // Move to the end of the branch\n\n          getGroup(g[5], c, h, t, d, l);\n          p5.pop();\n        }\n\n        if (b == 7) {\n          p5.push(); // Save the current state of transformation (i.e. where are we now)\n\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h); // Draw the branch\n\n          p5.translate(0, -h); // Move to the end of the branch\n\n          getGroup(g[0], c, h, t, d, l);\n          p5.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n\n          p5.push();\n          p5.rotate(-theta * 2);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.translate(0, -h);\n          getGroup(g[1], c, h, t, d, l);\n          p5.pop();\n          p5.push(); // Save the current state of transformation (i.e. where are we now)\n\n          p5.rotate(theta * 2); // Rotate by theta\n\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h); // Draw the branch\n\n          p5.translate(0, -h); // Move to the end of the branch\n\n          getGroup(g[2], c, h, t, d, l);\n          p5.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n\n          p5.push();\n          p5.rotate(-theta * 4);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.translate(0, -h);\n          getGroup(g[3], c, h, t, d, l);\n          p5.pop();\n          p5.push(); // Save the current state of transformation (i.e. where are we now)\n\n          p5.rotate(theta * 4); // Rotate by theta\n\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h); // Draw the branch\n\n          p5.translate(0, -h); // Move to the end of the branch\n\n          getGroup(g[4], c, h, t, d, l);\n          p5.pop(); // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\n\n          p5.push();\n          p5.rotate(-theta * 6);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.translate(0, -h);\n          getGroup(g[5], c, h, t, d, l);\n          p5.pop();\n          p5.push();\n          p5.rotate(theta * 6);\n          p5.strokeWeight(t);\n          p5.line(0, 0, 0, -h);\n          p5.translate(0, -h);\n          getGroup(g[6], c, h, t, d, l);\n          p5.pop();\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(P5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 497,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Tree;\n\nconst areEqual = (prevProps, nextProps) => true;\n\nexport default _c2 = /*#__PURE__*/React.memo(Tree, areEqual);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tree\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useRef","useState","useEffect","P5Wrapper","Tree","props","sketch","p5","theta","input","button","numberofgroups","setup","createCanvas","background","color","stroke","strokeWeight","a","radians","translate","width","height","line","groups","count","fetch","then","res","json","blob","group","data","hasOwnProperty","level","push","g","gr","getGroup","rotate","textSize","fill","console","log","text","groupy","location","pop","branch","groupsbelow","length","countminusone","id","h","t","d","l","b","c","r","finishLoading","rand","Math","random","randtwo","ellipse","accumulatedrotation","texttwo","textthree","textfour","areEqual","prevProps","nextProps","memo"],"sources":["C:/Users/Julia/OneDrive/Documents/completed-apps/tree-of-life-main/src/Tree.js"],"sourcesContent":["import React, {useRef,useState,useEffect} from \"react\";\r\nimport P5Wrapper from \"react-p5-wrapper\";\r\n\r\nfunction Tree(props) {\r\n\r\n  const sketch = (p5) => {\r\n\t\tlet theta,input,button\r\n    let numberofgroups=0\r\n\r\n    p5.setup = () => {\r\n\t\t\tp5.createCanvas(1000, 1000);\r\n\r\n\r\n\t\t   p5.background(p5.color(255,255,255));\r\n\t\t   p5.stroke(255);\r\n\t\t   p5.strokeWeight(30)\r\n\r\n\t\t   // Let's pick an angle 0 to 90 degrees based on the mouse position\r\n\t\t   let a = 15\r\n\t\t   // Convert it to radians\r\n\t\t   theta = p5.radians(a);\r\n\t\t   // Start the tree from the bottom of the screen\r\n\t\t   p5.translate(p5.width/2,p5.height);\r\n\t\t   // Draw a line 120 pixels\r\n\r\n\t\t   p5.stroke(101, 67, 33)\r\n\t\t   p5.line(0,0,0,-200);\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t (async function(){\r\n\t\t \tvar {groups,count}=await fetch('/groups/findlocalgrouplevels/localgroup').then(res => {\r\n\t\t \t\t return res.json();\r\n\t\t \t }).then(blob => {\r\n\t\t \t\t var groups={}\r\n\t\t \t\t    for (var group of blob.data){\r\n\t\t \t\t      if (groups.hasOwnProperty(`${group.level}`)){\r\n\t\t \t\t        groups[`${group.level}`].push(group)\r\n\t\t \t\t      }else{\r\n\t\t \t\t        groups[`${group.level}`]=[group]\r\n\t\t \t\t      }\r\n\t\t \t\t    }\r\n\t\t \t\t\t\tvar count=-1\r\n\t\t \t\t\t\tfor (var g in groups){\r\n\t\t \t\t\t\t\tcount++\r\n              for (var gr of groups[`${g}`]){\r\n                numberofgroups++\r\n              }\r\n\t\t \t\t\t\t}\r\n\t\t \t\t\t\treturn {groups,count}\r\n\t\t \t })\r\n       var group=await getGroup(groups[`${count}`][0][\"_id\"],count)\r\n       p5.push()\r\n      p5.rotate(-1.5708)\r\n      p5.textSize(23);\r\n      p5.strokeWeight(2)\r\n      p5.stroke(0)\r\n      p5.fill(255);\r\n      console.log(group)\r\n      p5.text(group.groupy.location, 10, 5)\r\n      p5.pop()\r\n     p5.translate(0,-200);\r\n     branch(200,25,0,10,group.groupy.groupsbelow.length,group.groupy.groupsbelow,group.countminusone,0)\r\n\t\t  })()\r\n\t\t};\r\n\r\n\r\n\r\n\r\n\r\n\t\tasync function getGroup(id,count){\r\n\t\t\tvar countminusone=count-1\r\n\t\t\tvar groupy=[]\r\n\t\t\tif(count>-1){\r\n\t\t\t groupy=await fetch('/groups/findlocalgroupnameidchildren/'+id).then(res => {\r\n\t\t\t\t\t return res.json();\r\n\t\t\t\t }).then(blob => {\r\n\t\t\t\treturn blob.data\r\n\t\t\t\t })\r\n\r\n\t\t\t }\r\n\t\t\t groupy=groupy[0]\r\n\t\t\t return {groupy,countminusone}\r\n\t\t}\r\n\r\n\r\n\t\tasync function branch(h,t,d,l,b,g,c,r){\r\n      numberofgroups--\r\n      console.log(numberofgroups)\r\n      if(numberofgroups==1){\r\n        props.finishLoading()\r\n      }\r\n\t\t  d+=1\r\n\t\t  t-=6\r\n\t\t  h *= 0.66;\r\n\t\t\tlet height=h/0.66\r\n\r\n\t\t  if(h>20){\r\n\t\t   if(d>1&&d>=2){\r\n\t\t    p5.stroke(74, 67, 0)\r\n\t\t  }\r\n\t\t   if(d>2){\r\n\t\t     let rand=Math.random()\r\n\t\t          let randtwo=Math.random()\r\n\r\n\t\t           if(randtwo<1){\r\n\t\t  p5.fill(34,139,34)\r\n\t\t p5.stroke(34,139,34)\r\n\t\t}\r\n\t\t     if(randtwo<0.66){\r\n\t\t  p5.fill(0,128,0)\r\n\t\t p5.stroke(0,128,0)\r\n\t\t}\r\n\t\tif(randtwo<0.33){\r\n\t\t  p5.fill(0,100,0)\r\n\t\t  p5.stroke(0,100,0)\r\n\t\t}\r\n\t\t     if(rand<0.5){\r\n\t\t        p5.ellipse((l+t), h/3, l, l/8);\r\n\t\t        p5.ellipse(-(l+t), h/1.5, l, l/8);\r\n\t\t       p5.ellipse(-(l+t), 0, l, l/8);\r\n\t\t     }else{\r\n\t\t        p5.ellipse(-(l+t), h/3, l, l/8);\r\n\t\t        p5.ellipse((l+t), h/1.5, l, l/8);\r\n\t\t       p5.ellipse(l+t, 0, l, l/8);\r\n\t\t     }\r\n         console.log(\"count\",c)\r\n         if(c==-1){\r\n           p5.ellipse(0, -15, 1/8, 8);\r\n         }\r\n\r\n\t\t     l*= 0.66;\r\n\t\t  }\r\n\t\t  }\r\n\r\n\t\t  if (h > 10) {\r\n\r\nif(b==2){\r\n\tp5.push();    // Save the current state of transformation (i.e. where are we now)\r\np5.rotate(theta);   // Rotate by theta\r\np5.strokeWeight(t)\r\np5.line(0, 0, 0, -h);  // Draw the branch\r\np5.translate(0, -h); // Move to the end of the branch\r\ngetGroup(g[0],c,h,t,d,l)\r\np5.pop();     // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\r\n\r\n// Repeat the same thing, only branch off to the \"left\" this time!\r\np5.push();\r\np5.rotate(-theta);\r\np5.strokeWeight(t)\r\np5.line(0, 0, 0, -h);\r\np5.translate(0, -h);\r\ngetGroup(g[1],c,h,t,d,l)\r\np5.pop();\r\n}\r\n\r\nif(b==3){\r\n\tp5.push();    // Save the current state of transformation (i.e. where are we now)\r\n\tp5.rotate(theta*2);   // Rotate by theta\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);  // Draw the branch\r\n\tp5.translate(0, -h); // Move to the end of the branch\r\n\tgetGroup(g[0],c,h,t,d,l)\r\n\tp5.pop();     // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\r\n\r\n\tp5.push();    // Save the current state of transformation (i.e. where are we now)\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);  // Draw the branch\r\n\tp5.translate(0, -h); // Move to the end of the branch\r\n\tgetGroup(g[1],c,h,t,d,l)\r\n\tp5.pop();     // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\r\n\r\n\t// Repeat the same thing, only branch off to the \"left\" this time!\r\n\tp5.push();\r\n\tp5.rotate(-theta*2);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.translate(0, -h);\r\n\tgetGroup(g[2],c,h,t,d,l)\r\n\tp5.pop();\r\n}\r\n\r\nif(b==4){\r\n\tlet accumulatedrotation=r-theta\r\n\tp5.push();\r\n\tp5.rotate(theta);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.push()\r\n  if(accumulatedrotation>0){\r\n    p5.translate(0, -h);\r\n    p5.rotate(1.5708)\r\n  }else{p5.rotate(-1.5708)}\r\n\tp5.textSize(t);\r\n\tp5.strokeWeight(2)\r\n\tp5.stroke(0)\r\n\tp5.fill(255);\r\n\tlet group=await getGroup(g[0],c)\r\n  p5.text(group.groupy.location, 10, 5)\r\n\tp5.pop()\r\n\tp5.translate(0, -h);\r\n\tawait branch(h,t,d,l,group.groupy.groupsbelow.length,group.groupy.groupsbelow,group.countminusone,accumulatedrotation)\r\n\tp5.pop();\r\n\r\n\r\n  accumulatedrotation=r+theta\r\n\tp5.push();\r\n\tp5.rotate(-theta);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.push()\r\n  if(accumulatedrotation>0){\r\n    p5.translate(0, -h);\r\n    p5.rotate(1.5708)\r\n  }else{p5.rotate(-1.5708)}\r\n\tp5.textSize(t);\r\n\tp5.strokeWeight(2)\r\n\tp5.stroke(0)\r\n\tp5.fill(255);\r\n\tgroup=await getGroup(g[1],c)\r\n\tlet texttwo=p5.text(group.groupy.location, 10, 5)\r\n\tp5.pop()\r\n\tp5.translate(0, -h);\r\n  console.log(group)\r\n\tawait branch(h,t,d,l,group.groupy.groupsbelow.length,group.groupy.groupsbelow,group.countminusone,accumulatedrotation)\r\n\tp5.pop();\r\n\r\n\r\n\taccumulatedrotation=r-theta*3\r\n\tp5.push();\r\n\tp5.rotate(theta*3);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.push()\r\n  if(accumulatedrotation>0){\r\n    p5.translate(0, -h);\r\n    p5.rotate(1.5708)\r\n  }else{p5.rotate(-1.5708)}\r\n\tp5.textSize(t);\r\n\tp5.strokeWeight(2)\r\n\tp5.stroke(0)\r\n\tp5.fill(255);\r\n\tgroup=await getGroup(g[2],c)\r\n\tconsole.log(group)\r\n\tlet textthree=p5.text(group.groupy.location, 10, 5)\r\n\tp5.pop()\r\n\tp5.translate(0, -h);\r\n\tawait branch(h,t,d,l,group.groupy.groupsbelow.length,group.groupy.groupsbelow,group.countminusone,accumulatedrotation)\r\n\tp5.pop();\r\n\r\n\r\n\taccumulatedrotation=r+theta*3\r\n\tp5.push();\r\n\tp5.rotate(-theta*3);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.push()\r\n  if(accumulatedrotation>0){\r\n    p5.translate(0, -h);\r\n    p5.rotate(1.5708)\r\n  }else{p5.rotate(-1.5708)}\r\n\tp5.textSize(t);\r\n\tp5.strokeWeight(2)\r\n\tp5.stroke(0)\r\n\tp5.fill(255);\r\n\tgroup=await getGroup(g[3],c)\r\n\tconsole.log(group)\r\n\tlet textfour=p5.text(group.groupy.location, 10, 5)\r\n\tp5.pop()\r\n\tp5.translate(0, -h);\r\n\tawait branch(h,t,d,l,group.groupy.groupsbelow.length,group.groupy.groupsbelow,group.countminusone,accumulatedrotation)\r\n\tp5.pop();\r\n}\r\n\r\nif(b==5){\r\n\r\n\tlet accumulatedrotation=r\r\n\tp5.push();\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.push()\r\n  if(accumulatedrotation>0){\r\n    p5.translate(0, -h);\r\n    p5.rotate(1.5708)\r\n  }else{p5.rotate(-1.5708)}\r\n  p5.textSize(t);\r\n\tp5.strokeWeight(2)\r\n\tp5.stroke(0)\r\n\tp5.fill(255);\r\n\tlet group=await getGroup(g[0],c)\r\n\tp5.text(group.groupy.location,10, 5)\r\n\tp5.pop()\r\n\tp5.translate(0, -h);\r\n\tawait branch(h,t,d,l,group.groupy.groupsbelow.length,group.groupy.groupsbelow,group.countminusone,accumulatedrotation)\r\n\tp5.pop();\r\n\r\n\taccumulatedrotation=r-theta*2\r\n\tp5.push();\r\n\tp5.rotate(theta*2);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.push()\r\n  if(accumulatedrotation>0){\r\n    p5.translate(0, -h);\r\n    p5.rotate(1.5708)\r\n  }else{p5.rotate(-1.5708)}\r\n  p5.textSize(t);\r\n\tp5.strokeWeight(2)\r\n\tp5.stroke(0)\r\n\tp5.fill(255);\r\n\tgroup=await getGroup(g[1],c)\r\n\tp5.text(group.groupy.location,10, 5)\r\n\tp5.pop()\r\n\tp5.translate(0, -h);\r\n\tawait branch(h,t,d,l,group.groupy.groupsbelow.length,group.groupy.groupsbelow,group.countminusone,accumulatedrotation)\r\n\tp5.pop();\r\n\r\n\taccumulatedrotation=r+theta*2\r\n\tp5.push();\r\n\tp5.rotate(-theta*2);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.push()\r\n  if(accumulatedrotation>0){\r\n    p5.translate(0, -h);\r\n    p5.rotate(1.5708)\r\n  }else{p5.rotate(-1.5708)}\r\n  \tp5.textSize(t);\r\n\tp5.strokeWeight(2)\r\n\tp5.stroke(0)\r\n\tp5.fill(255);\r\n\tgroup=await getGroup(g[2],c)\r\n\tp5.text(group.groupy.location, 10, 5)\r\n\tp5.pop()\r\n\tp5.translate(0, -h);\r\n\tawait branch(h,t,d,l,group.groupy.groupsbelow.length,group.groupy.groupsbelow,group.countminusone,accumulatedrotation)\r\n\tp5.pop();\r\n\r\n\taccumulatedrotation=r-theta*4\r\n\tp5.push();\r\n\tp5.rotate(theta*4);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.push()\r\n  if(accumulatedrotation>0){\r\n    p5.translate(0, -h);\r\n    p5.rotate(1.5708)\r\n  }else{\r\n    p5.rotate(-1.5708)}\r\n  p5.textSize(t);\r\n\tp5.strokeWeight(2)\r\n\tp5.stroke(0)\r\n\tp5.fill(255);\r\n\tgroup=await getGroup(g[3],c)\r\n\tp5.text(group.groupy.location, 10, 5)\r\n\tp5.pop()\r\n\tp5.translate(0, -h);\r\n\tawait branch(h,t,d,l,group.groupy.groupsbelow.length,group.groupy.groupsbelow,group.countminusone,accumulatedrotation)\r\n\tp5.pop();\r\n\r\n\taccumulatedrotation=r+theta*4\r\n\tp5.push();\r\n\tp5.rotate(-theta*4);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.push()\r\n  if(accumulatedrotation>0){\r\n    p5.translate(0, -h);\r\n    p5.rotate(1.5708)\r\n  }else{p5.rotate(-1.5708)}\r\n  p5.textSize(t);\r\n\tp5.strokeWeight(2)\r\n\tp5.stroke(0)\r\n\tp5.fill(255);\r\n\tgroup=await getGroup(g[4],c)\r\n\tp5.text(group.groupy.location, 10, 5)\r\n\tp5.pop()\r\n\tp5.translate(0, -h);\r\n\tawait branch(h,t,d,l,group.groupy.groupsbelow.length,group.groupy.groupsbelow,group.countminusone,accumulatedrotation)\r\n\tp5.pop();\r\n}\r\n\r\nif(b==6){\r\n\tp5.push();\r\n\tp5.rotate(theta);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);  // Draw the branch\r\n\tp5.translate(0, -h); // Move to the end of the branch\r\n\tgetGroup(g[0],c,h,t,d,l)\r\n\tp5.pop();     // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\r\n\r\n\tp5.push();\r\n\tp5.rotate(-theta);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.translate(0, -h);\r\n\tgetGroup(g[1],c,h,t,d,l)\r\n\tp5.pop();\r\n\r\n\tp5.push();    // Save the current state of transformation (i.e. where are we now)\r\n\tp5.rotate(theta*3);   // Rotate by theta\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);  // Draw the branch\r\n\tp5.translate(0, -h); // Move to the end of the branch\r\n\tgetGroup(g[2],c,h,t,d,l)\r\n\tp5.pop();     // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\r\n\r\n\tp5.push();\r\n\tp5.rotate(-theta*3);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.translate(0, -h);\r\n\tgetGroup(g[3],c,h,t,d,l)\r\n\tp5.pop();\r\n\r\n\tp5.push();    // Save the current state of transformation (i.e. where are we now)\r\n\tp5.rotate(theta*5);   // Rotate by theta\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);  // Draw the branch\r\n\tp5.translate(0, -h); // Move to the end of the branch\r\n\tgetGroup(g[4],c,h,t,d,l)\r\n\tp5.pop();\r\n\r\n\tp5.push();    // Save the current state of transformation (i.e. where are we now)\r\n\tp5.rotate(-theta*5);   // Rotate by theta\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);  // Draw the branch\r\n\tp5.translate(0, -h); // Move to the end of the branch\r\n\tgetGroup(g[5],c,h,t,d,l)\r\n\tp5.pop();\r\n}\r\nif(b==7){\r\n\tp5.push();    // Save the current state of transformation (i.e. where are we now)\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);  // Draw the branch\r\n\tp5.translate(0, -h); // Move to the end of the branch\r\n\tgetGroup(g[0],c,h,t,d,l)\r\n\tp5.pop();     // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\r\n\r\n\tp5.push();\r\n\tp5.rotate(-theta*2);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.translate(0, -h);\r\n\tgetGroup(g[1],c,h,t,d,l)\r\n\tp5.pop();\r\n\r\n\tp5.push();    // Save the current state of transformation (i.e. where are we now)\r\n\tp5.rotate(theta*2);   // Rotate by theta\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);  // Draw the branch\r\n\tp5.translate(0, -h); // Move to the end of the branch\r\n\tgetGroup(g[2],c,h,t,d,l)\r\n\tp5.pop();     // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\r\n\r\n\tp5.push();\r\n\tp5.rotate(-theta*4);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.translate(0, -h);\r\n\tgetGroup(g[3],c,h,t,d,l)\r\n\tp5.pop();\r\n\r\n\tp5.push();    // Save the current state of transformation (i.e. where are we now)\r\n\tp5.rotate(theta*4);   // Rotate by theta\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);  // Draw the branch\r\n\tp5.translate(0, -h); // Move to the end of the branch\r\n\tgetGroup(g[4],c,h,t,d,l)\r\n\tp5.pop();     // Whenever we get back here, we \"pop\" in order to restore the previous matrix state\r\n\r\n\tp5.push();\r\n\tp5.rotate(-theta*6);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.translate(0, -h);\r\n\tgetGroup(g[5],c,h,t,d,l)\r\n\tp5.pop();\r\n\r\n\tp5.push();\r\n\tp5.rotate(theta*6);\r\n\tp5.strokeWeight(t)\r\n\tp5.line(0, 0, 0, -h);\r\n\tp5.translate(0, -h);\r\n\tgetGroup(g[6],c,h,t,d,l)\r\n\tp5.pop();\r\n}\r\n\t\t  }\r\n\t\t}\r\n\r\n\r\n\r\n  };\r\n\r\n  return <P5Wrapper sketch={sketch} />;\r\n}\r\nconst areEqual = (prevProps, nextProps) => true;\r\n\r\nexport default React.memo(Tree, areEqual);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}